var currentlink = window.location.href;
if(currentlink.substring(0,71)=="https://desk.ngsub.tv/xtrf/faces/projectAssistant/projects/project.seam"){

////////////////////loader///////////////////////
var backround = document.createElement("div");
var loader = document.createElement("div");
loader.innerHTML = '<h1 style="width:100%;height:100%; position:absolute; top:300px" ><p style="padding:0;"><img style="padding:0;opacity:2;width:20%;height:20%;" src="https://drive.google.com/uc?id=13-ZWSQg_olXbqbfL82TcDr8SK5zgh9Jd"></p></h1>';

backround.className = "center";
backround.id = "loader";
loader.className = "center";
loader.style = "background: rgba(255, 255, 255, 0);width:100%;height:100%;position:absolute ;z-index:1999999;";
backround.style = "background: rgba(255, 255, 255, .7);width:100%;height:100%;position:absolute ;z-index:999999;";
var sheet = window.document.styleSheets[0];
sheet.insertRule('.center{  display: flex;  text-align: center;  justify-content: center;  align-items: center;  min-height: 100vh;}', sheet.cssRules.length);
document.body.style = "overflow: hidden;";
document.body.prepend(loader);
document.body.prepend(backround);


var interval = setInterval(function() {
    console.log($('[class^="input__item"]').length);
    if($('[class^="input__item"]').length>=34){
        clearInterval(interval);
        setTimeout( function (){ 
        loader.style.display = "none";backround.style.display = "none"; document.body.style = "overflow: scroll;";

//////////////////////////////////// color gannt ////////////////////////////
         var dates = [];
           var dates_header = [];
           var holiday_pos = [];
           var url = 'https://www.hebcal.com/hebcal?v=1&cfg=json&maj=on&mod=on&year=now&month=x&lg=h';
            fetch(url)
            .then(response => response.json())
            .then(data => holidays(data));
            
            function holidays(data){
              for(var i=0;i<data["items"].length;i++){
                dates.push([data["items"][i]["title"],new Date(data["items"][i]["date"])]);
              }

              var today = new Date();
              var year = today.getFullYear();
              var month = today.getMonth()+1;
              var day = today.getDay();
              var ganttheader = $('[class^="gantt-column-header ng-binding"]');
              var ganntblock = $('[class^="gantt-column gantt-foreground-col"]');
              
              if(ganttheader.length==31){
                var header_length = ganttheader.length-1;
              }else if(ganttheader.length==32){
                var header_length = ganttheader.length-2;
              }

              var gannt_today = document.querySelector('div[class="gantt-current-date-line ng-scope"]');
              var today_pos = Math.ceil(Number(gannt_today.style['left'].substring(0,gannt_today.style['left'].length-2))/200)
              
              for(var i=0;i<header_length;i++){
                dates_header.push(today.addDays(-today_pos+i+1));
              }
             //console.log(dates_header);
              for(var i=0;i<dates_header.length;i++){
                //console.log(dates_header[i].getDay());
                if((dates_header[i].getDay()==5)||(dates_header[i].getDay()==6)){
                  if(ganttheader.length==31){
                    ganttheader[i+1].style.backgroundColor = "#cad5e6";
                  }else if(ganttheader.length==32){
                    ganttheader[i+2].style.backgroundColor = "#cad5e6";
                  }
                  ganntblock[i].style.backgroundColor = "#e6eefa";
                }
              }
              
              for(var i=0;i<dates.length;i++){
                for(var j=0;j<dates_header.length;j++){
                  if(dates[i][1].getFullYear()==dates_header[j].getFullYear()&&(dates[i][1].getMonth()+1)==(dates_header[j].getMonth()+1)&&(dates[i][1].getDate())==(dates_header[j].getDate())){
                    if(holiday_pos.indexOf(j+1)==-1){
                      //console.log([dates[i][1].getFullYear(),dates_header[j].getFullYear(),dates[i][1].getMonth()+1,dates_header[j].getMonth()+1,dates[i][1].getDate(),dates_header[j].getDate()]);
                      holiday_pos.push([j+1,dates[i][0]]);
                    }
                  }
                }
              }
              //console.log(holiday_pos);
              for(var i=0;i<holiday_pos.length;i++){
                if(ganttheader.length==31){
                  ganttheader[holiday_pos[i][0]].style.backgroundColor = "#cad5e6";
                  ganttheader[holiday_pos[i][0]].innerText = ganttheader[holiday_pos[i][0]].innerText+" - "+holiday_pos[i][1];
                }else if(ganttheader.length==32){
                  ganttheader[holiday_pos[i][0]+1].style.backgroundColor = "#cad5e6";
                  ganttheader[holiday_pos[i][0]+1].innerText = ganttheader[holiday_pos[i][0]+1].innerText+" - "+holiday_pos[i][1];
                }
                ganntblock[holiday_pos[i][0]-1].style.backgroundColor = "#e6eefa";
              }
            }
            
            
////////////////////////////////////

/////////////////////////refresh job1////////////////////////////
var flag1 = 0;
var flag2 = 0;
var p_status1
var c_status1
var p_status2
var c_status2

var intervalId = window.setInterval(function() {
  var service = $('[class^="input ng-binding ng-scope"]')[0];
  if(service.textContent=="Timing Only"||service.textContent=="Translation + source"||service.textContent=="Conversion"||service.textContent=="Basic Translation"||service.textContent=="Basic Transcription"||service.textContent=="Additional Final File"){
  var jobtitles = $('[class^="short text--center ng-binding ng-isolate-scope"]');
  var jobs = $('[class^="status ng-binding"]');
  var jobboxs = $('[class^="job ng-scope"]');
  var clickables = $('[class^="content ng-scope clickable"]');
  var job1
  var job2
  var jobbox1
  var jobbox2
  var pos = 0;
  if (jobs.length > 0 && flag1 == 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        //console.log("job1 assigned");
        job1 = jobs[i];
        p_statu1s1 = job1.textContent;
        flag1 = 1;
      }
    }
  }
  if (jobs.length > 0 && flag2 == 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        //console.log("job2 assigned");
        job2 = jobs[i];
        p_status2 = job2.textContent;
        flag2 = 1;
      }
    }
  }
  if (jobs.length > 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        job1 = jobs[i];
        c_status1 = job1.textContent;
      }
    }
  }
  if (jobs.length > 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        job2 = jobs[i];
        c_status2 = job2.textContent;
      }
    }
  }
  //console.log(p_status2);
  //console.log(c_status2);
  if (job1 != undefined && c_status1 == "Started" && p_status1 == "Accepted") {
    //  p_status=c_status;
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        jobbox1 = jobboxs[i + 1];
        pos = i;
      }
    }
    var classjobbox1 = jobbox1.className;
    if (classjobbox1 == "job ng-scope selected") {
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    }
    if (classjobbox1 == "job ng-scope") {
      eventFire(clickables[pos], 'click');
    }
  }
  if (job2 != undefined && c_status2 == "Started" && p_status2 == "Accepted") {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        jobbox2 = jobboxs[i + 1];
        pos = i;
      }
    }
    var classjobbox2 = jobbox2.className;
    if (classjobbox2 == "job ng-scope selected") {
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    }
    if (classjobbox2 == "job ng-scope") {
      eventFire(clickables[pos], 'click');
    }
  }
  if (job1 != undefined && c_status1 == "Ready" && p_status1 == "Accepted") {
    p_status1 = c_status1;
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    window.scrollTo(0, 0);
    location.reload();
  }
  if (job2 != undefined && c_status2 == "Ready" && p_status2 == "Accepted") {
    p_status2 = c_status2;
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    window.scrollTo(0, 0);
    location.reload();
  }
  if (job1 != undefined && c_status1 != p_status1 && c_status1 != "Started") {
    p_status1 = c_status1;
  }
  if (job2 != undefined && c_status2 != p_status2 && c_status2 != "Started") {
    p_status2 = c_status2;
  }
}else if(service.textContent=="Raw Materials"){
  var jobtitles = $('[class^="short text--center ng-binding ng-isolate-scope"]');
  var jobs = $('[class^="status ng-binding"]');
  var jobboxs = $('[class^="job ng-scope"]');
  var clickables = $('[class^="content ng-scope clickable"]');
  var job1
  var job2
  var jobbox1
  var jobbox2
  if (jobs.length > 0 && flag1 == 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        //console.log("job1 assigned");
        job1 = jobs[i];
        p_statu1s1 = job1.textContent;
        flag1 = 1;
      }
    }
  }
  if (jobs.length > 0 && flag2 == 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        //console.log("job2 assigned");
        job2 = jobs[i];
        p_status2 = job2.textContent;
        flag2 = 1;
      }
    }
  }
  if (jobs.length > 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        job1 = jobs[i];
        c_status1 = job1.textContent;
      }
    }
  }
  if (jobs.length > 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        job2 = jobs[i];
        c_status2 = job2.textContent;
      }
    }
  }

  if (job1 != undefined && c_status1 == "Started" && p_status1 == "Accepted") {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        jobbox1 = jobboxs[i + 1];
        pos = i;
      }
    }
    var classjobbox1 = jobbox1.className;
    if (classjobbox1 == "job ng-scope selected") {
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      //eventFire(clickables[1], 'click');
    }
    if (classjobbox1 == "job ng-scope") {
      //jobbox1.className="job ng-scope selected";
      eventFire(clickables[pos], 'click');
    }
  }
  if (job2 != undefined && c_status2 == "Started" && p_status2 == "Accepted") {
    //  p_status=c_status;
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        jobbox2 = jobboxs[i + 1];
        pos = i;
      }
    }
    var classjobbox2 = jobbox2.className;
    if (classjobbox2 == "job ng-scope selected") {
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      //eventFire(clickables[0], 'click');
    }
    if (classjobbox2 == "job ng-scope") {
      //jobbox1.className="job ng-scope selected";
      eventFire(clickables[pos], 'click');
    }
    //console.log(jobboxs.length);
    //console.log(classjobbox);
  }
  if (job1 != undefined && c_status1 == "Ready" && p_status1 == "Accepted") {
    p_status1 = c_status1;
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    window.scrollTo(0, 0);
    location.reload();
  }
  if (job2 != undefined && c_status2 == "Ready" && p_status2 == "Accepted") {
    p_status2 = c_status2;
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    window.scrollTo(0, 0);
    location.reload();
  }
  if (job1 != undefined && c_status1 != p_status1 && c_status1 != "Started") {
    p_status1 = c_status1;
  }
  if (job2 != undefined && c_status2 != p_status2 && c_status2 != "Started") {
    p_status2 = c_status2;
  }
  
}

}, 1000);



//////////////////////////reset process///////////////////////

  var controls = $('[class^="controls ng-scope"]')[0];
  var button = document.createElement("button");
  button.textContent = "Reset Process";
  button.className  = "btn ng-scope";
  button.onclick = resetprocess;
  controls.appendChild(button);

var count = 50;
function resetprocess(){
  var k=-1;
  movei(k);
}
  function movei(z){
    setTimeout(function(){
    z=z+1;
    console.log(z);
    if(z<20){
      resetstage(z);
      movei(z);
    }
  },3000);
  }
  function resetstage(i){
  if($('[class^="close x-icon --close ng-scope"]')[0]!=undefined){
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
  }
  var clickables = $('[class^="content ng-scope clickable"]');
  var flag = 1;
    count=count-1;
    var clickables = $('[class^="content ng-scope clickable"]');
    var clickable=clickables[i];
    eventFire(clickable, 'click');
    var jobs = $('[class^="head single clickable"]');
    //console.log(jobs.length);
    if(jobs.length==0){
    var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
    if(state[0].textContent=="Mark as accepted"){
      ////do nothing
      setTimeout(function(){
      },2700);
      flag = flag+1;
      console.log("no change");
    }else if(state[0].textContent=="Start Job"){
      setTimeout(function(){
      console.log("accepted to open");
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },2700);
    }else if(state[0].textContent=="Mark as ready"){
      setTimeout(function(){
      console.log("started to accepted");
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      setTimeout(function(){
      eventFire(clickable, 'click');
      console.log("accepted to open");
      var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
      console.log(state[1].textContent);
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },700);
      },900);
    }else if(state[0].textContent=="Revert to started"){
      setTimeout(function(){
      console.log("ready to started");
      eventFire(state[0], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      setTimeout(function(){
      eventFire(clickable, 'click');
      console.log("started to accepted");
      var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
      console.log(state[1].textContent);
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      setTimeout(function(){
      eventFire(clickable, 'click');
      console.log("accepted to open");
      var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
      console.log(state[1].textContent);
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },700);
      },700);
      },700);
    }else{
      setTimeout(function(){
      },2700);
    }
  }
}

 ////////////////////////hyperlinks////////////////////////////////
var pdffield = $('[class^="input read-only ng-scope"]')[0];
var pdflink = pdffield.textContent;
var sheetfield = $('[class^="input read-only ng-scope"]')[2];
var sheetlink = sheetfield.textContent;
if(pdflink!=""){
pdffield.innerHTML='<a style="color:#035efc" href="'+pdflink+'" target="_blank" >PDF Link</a>';
}
sheetfield.innerHTML='<a style="color:#035efc" href="'+sheetlink+'" target="_blank" >Google Sheet Link</a>';


/////////////////////////rearange view///////////////////////////
console.log($('[class^="input__item"]').length);
if($('[class^="input__item"]').length==34){
var client = $('[class^="input__item"]')[0];
var service = $('[class^="input__item"]')[1];
var ordered = $('[class^="input__item"]')[2];
var startged = $('[class^="input__item"]')[4];
var deadline = $('[class^="input__item"]')[3];
var referance = $('[class^="input__item"]')[5];
var volume = $('[class^="input__item"]')[6];
var origin = $('[class^="input__item"]')[7];
var expexteddate = $('[class^="input__item custom_field"]')[0];
var quantity = $('[class^="input__item custom_field"]')[2];
client.appendChild(service);
ordered.appendChild(startged);
deadline.appendChild(expexteddate);
volume.appendChild(quantity);
origin.appendChild(referance);
}

///////////////////close job if open//////////////////
  var closewindow = $('[class^="close x-icon --close ng-scope"]')[0];
  if(closewindow!=undefined){
    eventFire(closewindow, 'click');
  }


//////////////////////////revert job///////////////////////

  var controls = $('[class^="controls ng-scope"]')[0];
  var button = document.createElement("button");
  button.textContent = "Revert Job";
  button.className  = "btn ng-scope";
  button.onclick = revertjob;
  controls.appendChild(button);

var count = 50;

function revertjob(){
  var k=0;
  var selected = document.querySelector("div[class='job ng-scope selected']");
  var clickables = selected.querySelector("div[class='content ng-scope clickable']");
  resetjob(clickables);
}

/////////////////////////////////////////////////////////////////////////////////////////////  
  function resetjob(clicked){

    var clickable=clicked;
    eventFire(clickable, 'click');
    var jobs = $('[class^="head single clickable"]');
    //console.log(jobs.length);
    if(jobs.length==0){
    var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
    if(state[0].textContent=="Mark as accepted"){
      ////do nothing
      setTimeout(function(){
      },2700);
      flag = flag+1;
      console.log("no change");
    }else if(state[0].textContent=="Mark as ready"){
      setTimeout(function(){
      console.log("started to accepted");
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },900);
    }else if(state[0].textContent=="Revert to started"){
      setTimeout(function(){
      console.log("ready to started");
      eventFire(state[0], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      setTimeout(function(){
      eventFire(clickable, 'click');
      console.log("started to accepted");
      var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
      console.log(state[1].textContent);
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },700);
      },700);
    }else{
      setTimeout(function(){
      },2700);
    }
  }
}

////////////////////////////////////////
function eventFire(el, etype) {
  if (el.fireEvent) {
    el.fireEvent('on' + etype);
  } else {
    var evObj = document.createEvent('Events');
    evObj.initEvent(etype, true, false);
    el.dispatchEvent(evObj);
  }
}

//////////////////////hide categories///////////////////

var service = document.querySelector("div[ng-if='project.service != null'").textContent;
var dropdown = document.querySelector("div[class='nd-multiselect dropdown--is-closed ng-isolate-scope']");
var k = dropdown.querySelector("div");
k.addEventListener("click", updatedropdown);



function updatedropdown(){ 
var service = document.querySelector("div[ng-if='project.service != null'").textContent;
if(service!="Raw Materials"){
  var categories = document.querySelectorAll("div[ng-attr-tabindex]");
  for (var i=0;i<categories.length;i++){
    var line = categories[i].querySelector("div[ng-if='::(!itemLabels)']").textContent;
    if(line=="Raw_Materials_10"||line=="Raw_Materials_12"||line=="Raw_Materials_14"){
      console.log(line);
      categories[i].style.visibility = "collapse";
    }
  }
}else if(service=="Raw Materials"){
  var categories = document.querySelectorAll("div[ng-attr-tabindex]");
  for (var i=0;i<categories.length;i++){
    var line = categories[i].querySelector("div[ng-if='::(!itemLabels)']").textContent;
  if(line=="מחירון_בלעדיות"||line=="מחירון_סדרות"|| line=="מחירון_סטודנטים"||line=="מחירון_סטנדרט"||line=="Accurate script from client"||line=="Accurate script+timings from client"||line=="Addition Technical"||line=="Inaccurate script from client"||line=="Many Supers"){
      console.log(line);
      categories[i].style.visibility = "collapse";
      }
    }
  }
}
}, 1000);
////////////////////////////
    }    
}, 100);
}else if(currentlink.substring(0,67)=="https://desk.ngsub.tv/xtrf/faces/projectAssistant/quotes/quote.seam"){

////////////////////loader///////////////////////
var backround = document.createElement("div");
var loader = document.createElement("div");
loader.innerHTML = '<h1 style="width:100%;height:100%; position:absolute; top:300px" ><p style="padding:0;"><img style="padding:0;opacity:2;width:20%;height:20%;" src="https://drive.google.com/uc?id=13-ZWSQg_olXbqbfL82TcDr8SK5zgh9Jd"></p></h1>';

backround.className = "center";
backround.id = "loader";
loader.className = "center";
loader.style = "background: rgba(255, 255, 255, 0);width:100%;height:100%;position:absolute ;z-index:1999999;";
backround.style = "background: rgba(255, 255, 255, .7);width:100%;height:100%;position:absolute ;z-index:999999;";
var sheet = window.document.styleSheets[0];
sheet.insertRule('.center{  display: flex;  text-align: center;  justify-content: center;  align-items: center;  min-height: 100vh;}', sheet.cssRules.length);
document.body.style = "overflow: hidden;";
document.body.prepend(loader);
document.body.prepend(backround);


var interval = setInterval(function() {
    console.log($('[class^="input__item"]').length);
    if($('[class^="input__item"]').length>=34){
        clearInterval(interval);
        setTimeout( function (){ 
        loader.style.display = "none";backround.style.display = "none"; document.body.style = "overflow: scroll;";
 
//////////////////////////////////// color gannt ////////////////////////////
        var dates = [];
           var dates_header = [];
           var holiday_pos = [];
           var url = 'https://www.hebcal.com/hebcal?v=1&cfg=json&maj=on&mod=on&year=now&month=x&lg=h';
            fetch(url)
            .then(response => response.json())
            .then(data => holidays(data));
            
            function holidays(data){
              for(var i=0;i<data["items"].length;i++){
                dates.push([data["items"][i]["title"],new Date(data["items"][i]["date"])]);
              }

              var today = new Date();
              var year = today.getFullYear();
              var month = today.getMonth()+1;
              var day = today.getDay();
              var ganttheader = $('[class^="gantt-column-header ng-binding"]');
              var ganntblock = $('[class^="gantt-column gantt-foreground-col"]');
              
              if(ganttheader.length==31){
                var header_length = ganttheader.length-1;
              }else if(ganttheader.length==32){
                var header_length = ganttheader.length-2;
              }

              var gannt_today = document.querySelector('div[class="gantt-current-date-line ng-scope"]');
              var today_pos = Math.ceil(Number(gannt_today.style['left'].substring(0,gannt_today.style['left'].length-2))/200)
              
              for(var i=0;i<header_length;i++){
                dates_header.push(today.addDays(-today_pos+i+1));
              }
             //console.log(dates_header);
              for(var i=0;i<dates_header.length;i++){
                //console.log(dates_header[i].getDay());
                if((dates_header[i].getDay()==5)||(dates_header[i].getDay()==6)){
                  if(ganttheader.length==31){
                    ganttheader[i+1].style.backgroundColor = "#cad5e6";
                  }else if(ganttheader.length==32){
                    ganttheader[i+2].style.backgroundColor = "#cad5e6";
                  }
                  ganntblock[i].style.backgroundColor = "#e6eefa";
                }
              }
              
              for(var i=0;i<dates.length;i++){
                for(var j=0;j<dates_header.length;j++){
                  if(dates[i][1].getFullYear()==dates_header[j].getFullYear()&&(dates[i][1].getMonth()+1)==(dates_header[j].getMonth()+1)&&(dates[i][1].getDate())==(dates_header[j].getDate())){
                    if(holiday_pos.indexOf(j+1)==-1){
                      //console.log([dates[i][1].getFullYear(),dates_header[j].getFullYear(),dates[i][1].getMonth()+1,dates_header[j].getMonth()+1,dates[i][1].getDate(),dates_header[j].getDate()]);
                      holiday_pos.push([j+1,dates[i][0]]);
                    }
                  }
                }
              }
              //console.log(holiday_pos);
              for(var i=0;i<holiday_pos.length;i++){
                if(ganttheader.length==31){
                  ganttheader[holiday_pos[i][0]].style.backgroundColor = "#cad5e6";
                  ganttheader[holiday_pos[i][0]].innerText = ganttheader[holiday_pos[i][0]].innerText+" - "+holiday_pos[i][1];
                }else if(ganttheader.length==32){
                  ganttheader[holiday_pos[i][0]+1].style.backgroundColor = "#cad5e6";
                  ganttheader[holiday_pos[i][0]+1].innerText = ganttheader[holiday_pos[i][0]+1].innerText+" - "+holiday_pos[i][1];
                }
                ganntblock[holiday_pos[i][0]-1].style.backgroundColor = "#e6eefa";
              }
            }
            
//////////////////////////////////// 
 
//////////////////////////revert job///////////////////////

  var controls = $('[class^="controls ng-scope"]')[0];
  var button = document.createElement("button");
  button.textContent = "Revert Job";
  button.className  = "btn ng-scope";
  button.onclick = revertjob;
  controls.appendChild(button);

var count = 50;

function revertjob(){
  var k=0;
  var selected = document.querySelector("div[class='job ng-scope selected']");
  var clickables = selected.querySelector("div[class='content ng-scope clickable']");
  resetjob(clickables);
}

/////////////////////////////////////////////////////////////////////////////////////////////  
  function resetjob(clicked){

    var clickable=clicked;
    eventFire(clickable, 'click');
    var jobs = $('[class^="head single clickable"]');
    //console.log(jobs.length);
    if(jobs.length==0){
    var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
    if(state[0].textContent=="Mark as accepted"){
      ////do nothing
      setTimeout(function(){
      },2700);
      flag = flag+1;
      console.log("no change");
    }else if(state[0].textContent=="Mark as ready"){
      setTimeout(function(){
      console.log("started to accepted");
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },900);
    }else if(state[0].textContent=="Revert to started"){
      setTimeout(function(){
      console.log("ready to started");
      eventFire(state[0], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      setTimeout(function(){
      eventFire(clickable, 'click');
      console.log("started to accepted");
      var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
      console.log(state[1].textContent);
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },700);
      },700);
    }else{
      setTimeout(function(){
      },2700);
    }
  }
}

//////////////////////hide categories///////////////////

var service = document.querySelector("div[ng-if='project.service !== null'").textContent;
var dropdown = document.querySelector("div[class='nd-multiselect dropdown--is-closed ng-isolate-scope']");
var k = dropdown.querySelector("div");
k.addEventListener("click", updatedropdown);



function updatedropdown(){ 
var service = document.querySelector("div[ng-if='project.service !== null'").textContent;
//var dropdown = document.querySelector("div[class='nd-multiselect dropdown--is-closed ng-isolate-scope']");
//var k = dropdown.querySelector("div");
//eventFire(k, 'click');
if(service!="Raw Materials"){
  var categories = document.querySelectorAll("div[ng-attr-tabindex]");
  for (var i=0;i<categories.length;i++){
    var line = categories[i].querySelector("div[ng-if='::(!itemLabels)']").textContent;
    if(line=="Raw_Materials_10"||line=="Raw_Materials_12"||line=="Raw_Materials_14"){
      console.log(line);
      categories[i].style.visibility = "collapse";
    }
  }
}else if(service=="Raw Materials"){
  var categories = document.querySelectorAll("div[ng-attr-tabindex]");
  for (var i=0;i<categories.length;i++){
    var line = categories[i].querySelector("div[ng-if='::(!itemLabels)']").textContent;
  if(line=="מחירון_בלעדיות"||line=="מחירון_סדרות"|| line=="מחירון_סטודנטים"||line=="מחירון_סטנדרט"||line=="Accurate script from client"||line=="Accurate script+timings from client"||line=="Addition Technical"||line=="Inaccurate script from client"||line=="Many Supers"){
      console.log(line);
      categories[i].style.visibility = "collapse";
      }
    }
  }
}


///////////////////close job if open//////////////////

  var closewindow = $('[class^="close x-icon --close ng-scope"]')[0];
  if(closewindow!=undefined){
    eventFire(closewindow, 'click');
    //location.reload();
  }



//////////////////////////reset process///////////////////////

  var controls = $('[class^="controls ng-scope"]')[0];
  var button = document.createElement("button");
  button.textContent = "Reset Process";
  button.className  = "btn ng-scope";
  button.onclick = resetprocess;
  controls.appendChild(button);

var count = 50;
function resetprocess(){
  var k=-1;
  movei(k);
}
  function movei(z){
    setTimeout(function(){
    z=z+1;
    console.log(z);
    if(z<20){
      resetstage(z);
      movei(z);
    }
  },3000);
  }
  function resetstage(i){
  if($('[class^="close x-icon --close ng-scope"]')[0]!=undefined){
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
  }
  var clickables = $('[class^="content ng-scope clickable"]');
  var flag = 1;
    count=count-1;
    var clickables = $('[class^="content ng-scope clickable"]');
    var clickable=clickables[i];
    eventFire(clickable, 'click');
    var jobs = $('[class^="head single clickable"]');
    //console.log(jobs.length);
    if(jobs.length==0){
    var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
    if(state[0].textContent=="Mark as accepted"){
      ////do nothing
      setTimeout(function(){
      },2700);
      flag = flag+1;
      console.log("no change");
    }else if(state[0].textContent=="Start Job"){
      setTimeout(function(){
      console.log("accepted to open");
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },2700);
    }else if(state[0].textContent=="Mark as ready"){
      setTimeout(function(){
      console.log("started to accepted");
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      setTimeout(function(){
      eventFire(clickable, 'click');
      console.log("accepted to open");
      var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
      console.log(state[1].textContent);
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },700);
      },900);
    }else if(state[0].textContent=="Revert to started"){
      setTimeout(function(){
      console.log("ready to started");
      eventFire(state[0], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      setTimeout(function(){
      eventFire(clickable, 'click');
      console.log("started to accepted");
      var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
      console.log(state[1].textContent);
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      setTimeout(function(){
      eventFire(clickable, 'click');
      console.log("accepted to open");
      var state = $('[class^="item ng-binding ng-scope ng-isolate-scope"]');
      console.log(state[1].textContent);
      eventFire(state[1], 'click');
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      },700);
      },700);
      },700);
    }else{
      setTimeout(function(){
      },2700);
    }
  }
}
////////////////////////////////////////
function eventFire(el, etype) {
  if (el.fireEvent) {
    el.fireEvent('on' + etype);
  } else {
    var evObj = document.createEvent('Events');
    evObj.initEvent(etype, true, false);
    el.dispatchEvent(evObj);
  }
}

/////////////////////////rearange view///////////////////////////
console.log($('[class^="input__item"]').length);
if($('[class^="input__item"]').length==35){
var client = $('[class^="input__item"]')[0];
var service = $('[class^="input__item"]')[1];
var created = $('[class^="input__item"]')[2];
var expaire = $('[class^="input__item"]')[3];
var deadline = $('[class^="input__item"]')[4];
var working = $('[class^="input__item"]')[5];
var referance = $('[class^="input__item"]')[6];
var volume = $('[class^="input__item"]')[7];
var origin = $('[class^="input__item"]')[8];
var expexteddate = $('[class^="input__item custom_field"]')[0];
var quantity = $('[class^="input__item custom_field"]')[2];
client.appendChild(service);
created.appendChild(expaire);
deadline.appendChild(expexteddate);
working.appendChild(referance);
volume.appendChild(quantity);
origin.appendChild(expaire);
}
console.log($('[class^="input__item"]').length);
if($('[class^="input__item"]').length==36){
var client = $('[class^="input__item"]')[0];
var service = $('[class^="input__item"]')[1];
var created = $('[class^="input__item"]')[2];
var actual = $('[class^="input__item"]')[3];
var expaire = $('[class^="input__item"]')[4];
var deadline = $('[class^="input__item"]')[5];
var working = $('[class^="input__item"]')[6];
var referance = $('[class^="input__item"]')[7];
var volume = $('[class^="input__item"]')[8];
var origin = $('[class^="input__item"]')[9];
var expexteddate = $('[class^="input__item custom_field"]')[0];
var quantity = $('[class^="input__item custom_field"]')[2];
client.appendChild(service);
created.appendChild(actual);
deadline.appendChild(expexteddate);
working.appendChild(referance);
volume.appendChild(quantity);
origin.appendChild(expaire);
}

//////////////////////////color empty red///////////////////////

var inputs = $('[class^="inp ng-pristine ng-untouched ng-valid ng-isolate-scope"]');
var input1 = document.querySelector("div[class='input calendar-input']").getElementsByTagName("input")[0];//inputs[0];
var input6 = inputs[5];
var input5 = inputs[4];
var input9 = inputs[8];

var intervalId = window.setInterval(function() {


var languages = $('[class^="nd-display ng-binding ng-scope"]');
var source = languages[0];
var target = languages[1];
if(source.textContent=="Select Language..."){
  source.style = "background:#f5b8b8";
}
if(source.textContent!="Select Language..." ){
  source.style = "background:#ffffff";
}
if(target.textContent=="Select Languages..."){
  target.style = "background:#f5b8b8";
}
if(target.textContent!="Select Languages..."){
  target.style = "background:#ffffff";
}
console.log(input1.value);
if(input1.value==""){
  input1.style = "background-color: #f5b8b8 !important";
}
//console.log(input1.value);
 //input1.style = "background-color: #f5b8b8 !important";
if(input1.value!=""){
  input1.style = "background-color:#ffffff !important";
}

if(input5.value==""){
  input5.style = "background-color: #f5b8b8 !important";
}
if(input5.value!=""){
  input5.style = "background-color:#ffffff !important";
}
if(input6.value==""){
  input6.style = "background-color: #f5b8b8 !important";
}
if(input6.value!=""){
  input6.style = "background-color:#ffffff !important";
}
if(input9.value==""){
  input9.style = "background-color: #f5b8b8 !important";
}
if(input9.value!=""){
  input9.style = "background-color:#ffffff !important";
}

}, 1000);



/////////////////////////changed languages///////////////////////////
var flag = 0;
var p_source;
var p_target;
var intervalId = window.setInterval(function() {
  var languages = $('[class^="nd-display ng-binding ng-scope"]');
  var source = languages[0];
  var target = languages[1];
  if(flag==0){
        p_source = source.textContent;
        p_target = target.textContent;
    flag=1;
  }
if(p_source=="Select Language..."&&p_target=="Select Languages..."&&source.textContent!="Select Language..."&&target.textContent!="Select Languages..."){
  setTimeout(function(){
    window.scrollTo(0, 0);
    location.reload();
  }, 3000);
}
if((p_source!="Select Language..."||p_target!="Select Languages...")&&(source.textContent!=p_source||target.textContent!=p_target)){
  setTimeout(function(){
    window.scrollTo(0, 0);
    location.reload();
}, 3000);
}
}, 1000);


////////////////////////hyperlinks////////////////////////////////


var pdffield = $('[class^="input read-only ng-scope"]')[0];
var pdflink = pdffield.textContent;
var sheetfield = $('[class^="input read-only ng-scope"]')[2];
var sheetlink = sheetfield.textContent;
if(pdflink!=""){
pdffield.innerHTML='<a style="color:#035efc" href="'+pdflink+'" target="_blank" >PDF Link</a>';
}
sheetfield.innerHTML='<a style="color:#035efc" href="'+sheetlink+'" target="_blank" >Google Sheet Link</a>';



/////////////////////////refresh job1////////////////////////////
var flag1 = 0;
var flag2 = 0;
var p_status1
var c_status1
var p_status2
var c_status2

var intervalId = window.setInterval(function() {
  var service = $('[class^="input ng-binding ng-scope"]')[0];
  if(service.textContent=="Timing Only"||service.textContent=="Translation + source"||service.textContent=="Conversion"||service.textContent=="Basic Translation"||service.textContent=="Basic Transcription"||service.textContent=="Additional Final File"){
  var jobtitles = $('[class^="short text--center ng-binding ng-isolate-scope"]');
  var jobs = $('[class^="status ng-binding"]');
  var jobboxs = $('[class^="job ng-scope"]');
  var clickables = $('[class^="content ng-scope clickable"]');
  var job1
  var job2
  var jobbox1
  var jobbox2
  var pos = 0;
  if (jobs.length > 0 && flag1 == 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        //console.log("job1 assigned");
        job1 = jobs[i];
        p_statu1s1 = job1.textContent;
        flag1 = 1;
      }
    }
  }
  if (jobs.length > 0 && flag2 == 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        //console.log("job2 assigned");
        job2 = jobs[i];
        p_status2 = job2.textContent;
        flag2 = 1;
      }
    }
  }
  if (jobs.length > 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        job1 = jobs[i];
        c_status1 = job1.textContent;
      }
    }
  }
  if (jobs.length > 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        job2 = jobs[i];
        c_status2 = job2.textContent;
      }
    }
  }

  if (job1 != undefined && c_status1 == "Started" && p_status1 == "Accepted") {
    //  p_status=c_status;
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        jobbox1 = jobboxs[i + 1];
        pos = i;
      }
    }
    var classjobbox1 = jobbox1.className;
    if (classjobbox1 == "job ng-scope selected") {
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    }
    if (classjobbox1 == "job ng-scope") {
      eventFire(clickables[pos], 'click');
    }
  }
  if (job2 != undefined && c_status2 == "Started" && p_status2 == "Accepted") {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        jobbox2 = jobboxs[i + 1];
        pos = i;
      }
    }
    var classjobbox2 = jobbox2.className;
    if (classjobbox2 == "job ng-scope selected") {
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    }
    if (classjobbox2 == "job ng-scope") {
      eventFire(clickables[pos], 'click');
    }
  }
  if (job1 != undefined && c_status1 == "Ready" && p_status1 == "Accepted") {
    p_status1 = c_status1;
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    window.scrollTo(0, 0);
    location.reload();
  }
  if (job2 != undefined && c_status2 == "Ready" && p_status2 == "Accepted") {
    p_status2 = c_status2;
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    window.scrollTo(0, 0);
    location.reload();
  }
  if (job1 != undefined && c_status1 != p_status1 && c_status1 != "Started") {
    p_status1 = c_status1;
  }
  if (job2 != undefined && c_status2 != p_status2 && c_status2 != "Started") {
    p_status2 = c_status2;
  }
}else if(service.textContent=="Raw Materials"){
  var jobtitles = $('[class^="short text--center ng-binding ng-isolate-scope"]');
  var jobs = $('[class^="status ng-binding"]');
  var jobboxs = $('[class^="job ng-scope"]');
  var clickables = $('[class^="content ng-scope clickable"]');
  var job1
  var job2
  var jobbox1
  var jobbox2
  if (jobs.length > 0 && flag1 == 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        //console.log("job1 assigned");
        job1 = jobs[i];
        p_statu1s1 = job1.textContent;
        flag1 = 1;
      }
    }
  }
  if (jobs.length > 0 && flag2 == 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        //console.log("job2 assigned");
        job2 = jobs[i];
        p_status2 = job2.textContent;
        flag2 = 1;
      }
    }
  }
  if (jobs.length > 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        job1 = jobs[i];
        c_status1 = job1.textContent;
      }
    }
  }
  if (jobs.length > 0) {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        job2 = jobs[i];
        c_status2 = job2.textContent;
      }
    }
  }

  if (job1 != undefined && c_status1 == "Started" && p_status1 == "Accepted") {
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Update Finance") {
        jobbox1 = jobboxs[i + 1];
        pos = i;
      }
    }
    var classjobbox1 = jobbox1.className;
    if (classjobbox1 == "job ng-scope selected") {
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      //eventFire(clickables[1], 'click');
    }
    if (classjobbox1 == "job ng-scope") {
      //jobbox1.className="job ng-scope selected";
      eventFire(clickables[pos], 'click');
    }
  }
  if (job2 != undefined && c_status2 == "Started" && p_status2 == "Accepted") {
    //  p_status=c_status;
    for (var i = 0; i < jobs.length; i++) {
      if (jobtitles[i].textContent == "Create PDF") {
        jobbox2 = jobboxs[i + 1];
        pos = i;
      }
    }
    var classjobbox2 = jobbox2.className;
    if (classjobbox2 == "job ng-scope selected") {
      eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
      //eventFire(clickables[0], 'click');
    }
    if (classjobbox2 == "job ng-scope") {
      //jobbox1.className="job ng-scope selected";
      eventFire(clickables[pos], 'click');
    }
    //console.log(jobboxs.length);
    //console.log(classjobbox);
  }
  if (job1 != undefined && c_status1 == "Ready" && p_status1 == "Accepted") {
    p_status1 = c_status1;
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    window.scrollTo(0, 0);
    location.reload();
  }
  if (job2 != undefined && c_status2 == "Ready" && p_status2 == "Accepted") {
    p_status2 = c_status2;
    eventFire($('[class^="close x-icon --close ng-scope"]')[0], 'click');
    window.scrollTo(0, 0);
    location.reload();
  }
  if (job1 != undefined && c_status1 != p_status1 && c_status1 != "Started") {
    p_status1 = c_status1;
  }
  if (job2 != undefined && c_status2 != p_status2 && c_status2 != "Started") {
    p_status2 = c_status2;
  }
  
}

}, 1000);

}, 1000);
    }    
}, 100);
}else if(currentlink.substring(0,43)=="https://desk.ngsub.tv/xtrf/faces/home.seam?"||currentlink.substring(0,42)=="https://desk.ngsub.tv/xtrf/faces/home.seam"){
//////////////////////redierct to dashboard and loading logo///////////////////
var loader = document.createElement("div");
//loader.innerHTML =     '<div class="ring"></div>'
//                       +'<span class="spanc">loading...</span>';
loader.innerHTML = '<img style="width:100%;height:90%;" src="https://drive.google.com/uc?id=1M5gl6GsTrM9rcxUfeKvfzM0I-P8fJKw3">';
//https://drive.google.com/uc?id=1ca-ppNRRTFSDqYzQphCKgIUIOxZsaf8L
loader.className = "center";
loader.id = "loader";
loader.style = "width:600px;height:600px;background:#ffffff;position:absolute ;z-index:999999;";
var sheet = window.document.styleSheets[0];
sheet.insertRule('.center{  display: flex;  text-align: center;  justify-content: center;  align-items: center;  min-height: 100vh;}', sheet.cssRules.length);
loader.style = "top:0;left:0;padding-top:0rem;";
loader.style = "backgrount:#ffffff;"
document.body.style = "overflow: hidden;";
document.body.prepend(loader);
setTimeout(function() {
  window.location = "https://desk.ngsub.tv/xtrf/faces/dashboard2/dashboard.seam#/detail/";
}, 6000);




}else if(currentlink.substring(0,58)=="https://desk.ngsub.tv/xtrf/faces/dashboard2/dashboard.seam"){
  /////////////////////////change dashboard colord/////////////////
setTimeout( function (){
  var tables = $('[class^="x-card__header__heading ng-binding"]');
  //console.log(tables.length);
  for(var i=0;i<tables.length;i++){
    if(tables[i].textContent=="Projects Due Today+Overdue"){
      tables[i].style = "color:#990000";
    }
    if(tables[i].textContent=="Jobs Due Today+Overdue"){
      tables[i].style = "color:#351c75";
    }
    if(tables[i].textContent=="Open Projects"){
      tables[i].style = "color:#38761d";
    }
    if(tables[i].textContent=="Quotes From The Last 30 Days"){
      tables[i].style = "color:#741b47";
    }
    if(tables[i].textContent=="Jobs Assigned To Me"){
      tables[i].style = "color:#0000ff";
    }
    if(tables[i].textContent=="Unassigned Jobs"){
      tables[i].style = "color:#666666";
    }
    if(tables[i].textContent=="Jobs Pending Evaluation"){
      tables[i].style = "color:#bf9000";
    }
  }
}, 1000);

//////////////////////////change deadline color////////////////////
setTimeout( function (){
  var today = new Date();
  var dd = String(today.getDate()).padStart(2, '0');
  var mm = String(today.getMonth() + 1).padStart(2, '0');
  var yyyy = today.getFullYear();
  today = dd + '/' + mm + '/' + yyyy;
  var firstDate = new Date(yyyy, mm, dd);
  const oneDay = 24 * 60 * 60 * 1000;
  var day
  var month
  var year
  
  var tables = $('[class^="x-card__header__heading ng-binding"]');
  var iframes = document.getElementsByTagName("iframe");
  
  for(var i=0;i<tables.length;i++){
    if(tables[i].textContent=="Projects Due Today+Overdue"){
     var dashboardtable1 = iframes[i].contentDocument;
    }
    if(tables[i].textContent=="Jobs Assigned To Me"){
     var dashboardtable2 = iframes[i].contentDocument;
    }
    if(tables[i].textContent=="Open Projects"){
      var dashboardtable3 = iframes[i].contentDocument;
    }
    if(tables[i].textContent=="Jobs Due Today+Overdue"){
      var dashboardtable5 = iframes[i].contentDocument;
    }
    if(tables[i].textContent=="Unassigned Jobs"){
      var dashboardtable6 = iframes[i].contentDocument;
    }
  }
  
 
  //var dashboardtable4 = iframes[3].contentDocument;
  //var dashboardtable7 = iframes[6].contentDocument;
  
  var table1rows = dashboardtable1.getElementsByTagName("tr");
  var table2rows = dashboardtable2.getElementsByTagName("tr");
  var table3rows = dashboardtable3.getElementsByTagName("tr");
  var table5rows = dashboardtable5.getElementsByTagName("tr");
  var table6rows = dashboardtable6.getElementsByTagName("tr");
  
  for(var i=2;i<table1rows.length;i++){
    var table1deadline = table1rows[i].getElementsByTagName("td");
    var deadlines1 = table1deadline[6];
    var deadline = deadlines1.textContent;
    day = deadline.substring(8,10);
    month = deadline.substring(5,7);
    year = deadline.substring(0,4);
    var secondDate = new Date(year, month, day);
    var diffDays = Math.round((secondDate - firstDate) / oneDay);
    if(diffDays<=1){
      for(var j=0;j<table1deadline.length;j++){
        table1deadline[j].style = "color:#ff9500";
      }
    }
    console.log(diffDays);
    if(diffDays<0){
      for(var j=0;j<table1deadline.length;j++){
        table1deadline[j].style = "color:#fc0303";
      }
    }
  }
  for(var i=2;i<table3rows.length;i++){
    var table3deadline = table3rows[i].getElementsByTagName("td");
    var deadlines3 = table3deadline[7];
    var deadline = deadlines3.textContent;
    day = deadline.substring(8,10);
    month = deadline.substring(5,7);
    year = deadline.substring(0,4);
    var secondDate = new Date(year, month, day);
    var diffDays = Math.round((secondDate - firstDate) / oneDay);
    if(diffDays<=1){
      deadlines3.style = "color:#ff9500";
    }
    console.log(diffDays);
    if(diffDays<0){
      deadlines3.style = "color:#fc0303";
    }
  }
  for(var i=2;i<table2rows.length;i++){
    var table2deadline = table2rows[i].getElementsByTagName("td");
    var deadlines2 = table2deadline[5];
    var deadline = deadlines2.textContent;
    day = deadline.substring(8,10);
    month = deadline.substring(5,7);
    year = deadline.substring(0,4);
    var secondDate = new Date(year, month, day);
    var diffDays = Math.round((secondDate - firstDate) / oneDay);
    if(diffDays<=1){
      deadlines2.style = "color:#ff9500";
    }
    console.log(diffDays);
    if(diffDays<0){
      deadlines2.style = "color:#fc0303";
    }
  }
  for(var i=2;i<table5rows.length;i++){
    var table5deadline = table5rows[i].getElementsByTagName("td");
    var deadlines5 = table5deadline[5];
    var deadline = deadlines5.textContent;
    day = deadline.substring(8,10);
    month = deadline.substring(5,7);
    year = deadline.substring(0,4);
    var secondDate = new Date(year, month, day);
    var diffDays = Math.round((secondDate - firstDate) / oneDay);
    if(diffDays<=1){
      for(var j=0;j<table5deadline.length;j++){
        table5deadline[j].style = "color:#ff9500";
      }
    }
    console.log(diffDays);
    if(diffDays<0){
      for(var j=0;j<table5deadline.length;j++){
        table5deadline[j].style = "color:#fc0303";
      }
    }
  }
  for(var i=2;i<table6rows.length;i++){
    var table6deadline = table6rows[i].getElementsByTagName("td");
    var deadlines6 = table6deadline[5];
    var deadline = deadlines6.textContent;
    day = deadline.substring(8,10);
    month = deadline.substring(5,7);
    year = deadline.substring(0,4);
    var secondDate = new Date(year, month, day);
    var diffDays = Math.round((secondDate - firstDate) / oneDay);
    if(diffDays<=1){
      deadlines6.style = "color:#ff9500";
    }
    console.log(diffDays);
    if(diffDays<0){
      deadlines6.style = "color:#fc0303";
    }
  }
}, 7000);




}


//////////////////////////////
Date.prototype.addDays = function(days) {
    var date = new Date(this.valueOf());
    date.setDate(date.getDate() + days);
    return date;
}
